/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package r3qu13m.sr;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.regex.Pattern;

import r3qu13m.sr.records.Config;

public class SeargeRenamer {
	private static final Pattern REGEX_METHOD = Pattern.compile("func_[0-9]+_[a-zA-Z]+_?");
	private static final Pattern REGEX_FIELD = Pattern.compile("field_[0-9]+_[a-zA-Z]+_?");
	private static final Pattern REGEX_PARAM = Pattern.compile("p_[a-zA-Z0-9]+_[0-9]+_");

	private static void run(final Config cfg) {
		final var exceptPaths = Arrays.asList(cfg.targetDir().resolve(Paths.get("org", "bouncycastle")),
				cfg.targetDir().resolve(Paths.get("paulscode")), cfg.targetDir().resolve(Paths.get("argo")));
		try (var stream = Files.walk(cfg.targetDir())) {
			stream.filter(x -> x.toString().endsWith(".java") && !exceptPaths.stream().anyMatch(y -> x.startsWith(y)))
					.forEach(file -> {
						try {
							System.out.printf("Processing %s...\n", file.getFileName());
							var contents = Files.readString(file);
							contents = SeargeRenamer.REGEX_METHOD.matcher(contents)
									.replaceAll(m -> cfg.lookupMethod(m.group()).orElse(m.group()));
							contents = SeargeRenamer.REGEX_FIELD.matcher(contents)
									.replaceAll(m -> cfg.lookupField(m.group()).orElse(m.group()));
							contents = SeargeRenamer.REGEX_PARAM.matcher(contents)
									.replaceAll(m -> cfg.lookupParam(m.group()).orElse(m.group()));
							Files.writeString(file, contents);
						} catch (final IOException e) {
							if (cfg.isDebug()) {
								e.printStackTrace();
							}
						}
					});
		} catch (final IOException e) {
			if (cfg.isDebug()) {
				e.printStackTrace();
			}
		}
	}

	public static void main(final String[] args) {
		if (args.length != 2) {
			System.err.println("Usage: java -jar SeargeRenamer.jar [TARGET DIR] [CONFIG DIR]");
			System.exit(1);
		}

		Config.load(args[0], args[1]).ifPresent(SeargeRenamer::run);
	}
}
